/*******************************************************************************
 * Copyright (c) 2000, 2019 IBM Corporation and others.
 *
 * This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
package org.eclipse.jdt.internal.compiler.parser;

/**
 * IMPORTANT NOTE: These constants are dedicated to the internal Scanner implementation.
 * It is mirrored in org.eclipse.jdt.core.compiler public package where it is API.
 * The mirror implementation is using the backward compatible ITerminalSymbols constant
 * definitions (stable with 2.0), whereas the internal implementation uses TerminalTokens
 * which constant values reflect the latest parser generation state.
 */
/**
 * Maps each terminal symbol in the java-grammar into a unique integer.
 * This integer is used to represent the terminal when computing a parsing action.
 *
 * Disclaimer : These constant values are generated automatically using a Java
 * grammar, therefore their actual values are subject to change if new keywords
 * were added to the language (for instance, 'assert' is a keyword in 1.4).
 */
public interface TerminalTokens {

	// special tokens not part of grammar - not autogenerated
	int TokenNameNotAToken = 0,
							TokenNameWHITESPACE = 1000,
							TokenNameCOMMENT_LINE = 1001,
							TokenNameCOMMENT_BLOCK = 1002,
							TokenNameCOMMENT_JAVADOC = 1003;

	// BEGIN_AUTOGENERATED_REGION
	int TokenNameIdentifier = 25,
							TokenNameabstract = 57,
							TokenNameassert = 96,
							TokenNameboolean = 110,
							TokenNamebreak = 97,
							TokenNamebyte = 111,
							TokenNamecase = 107,
							TokenNamecatch = 112,
							TokenNamechar = 113,
							TokenNameclass = 85,
							TokenNamecontinue = 98,
							TokenNameconst = 139,
							TokenNamedefault = 91,
							TokenNamedo = 99,
							TokenNamedouble = 114,
							TokenNameelse = 73,
							TokenNameenum = 87,
							TokenNameextends = 108,
							TokenNamefalse = 42,
							TokenNamefinal = 58,
							TokenNamefinally = 121,
							TokenNamefloat = 115,
							TokenNamefor = 53,
							TokenNamegoto = 140,
							TokenNameif = 92,
							TokenNameimplements = 134,
							TokenNameimport = 116,
							TokenNameinstanceof = 17,
							TokenNameint = 117,
							TokenNameinterface = 86,
							TokenNamelong = 118,
							TokenNamenative = 59,
							TokenNamenew = 37,
							TokenNamenon_sealed = 60,
							TokenNamenull = 43,
							TokenNamepackage = 106,
							TokenNameprivate = 61,
							TokenNameprotected = 62,
							TokenNamepublic = 63,
							TokenNamereturn = 100,
							TokenNameshort = 119,
							TokenNamestatic = 40,
							TokenNamestrictfp = 64,
							TokenNamesuper = 35,
							TokenNameswitch = 67,
							TokenNamesynchronized = 54,
							TokenNamethis = 36,
							TokenNamethrow = 93,
							TokenNamethrows = 122,
							TokenNametransient = 65,
							TokenNametrue = 44,
							TokenNametry = 101,
							TokenNamevoid = 120,
							TokenNamevolatile = 66,
							TokenNamewhile = 94,
							TokenNamemodule = 124,
							TokenNameopen = 125,
							TokenNamerequires = 126,
							TokenNametransitive = 132,
							TokenNameexports = 127,
							TokenNameopens = 128,
							TokenNameto = 135,
							TokenNameuses = 129,
							TokenNameprovides = 130,
							TokenNamewith = 136,
							TokenNamewithstmt = 102,
							TokenNamein = 21,
							TokenNamepyjavatuple = 23,
							TokenNamenot = 22,
							TokenNameyieldr = 103,
							TokenNameIntegerLiteral = 45,
							TokenNameLongLiteral = 46,
							TokenNameFloatingPointLiteral = 47,
							TokenNameDoubleLiteral = 48,
							TokenNameCharacterLiteral = 49,
							TokenNameStringLiteral = 50,
							TokenNameTextBlock = 51,
							TokenNamePLUS_PLUS = 1,
							TokenNameMINUS_MINUS = 2,
							TokenNameEQUAL_EQUAL = 19,
							TokenNameLESS_EQUAL = 12,
							TokenNameGREATER_EQUAL = 13,
							TokenNameNOT_EQUAL = 20,
							TokenNameLEFT_SHIFT = 18,
							TokenNameRIGHT_SHIFT = 14,
							TokenNameUNSIGNED_RIGHT_SHIFT = 16,
							TokenNamePLUS_EQUAL = 74,
							TokenNameMINUS_EQUAL = 75,
							TokenNameMULTIPLY_EQUAL = 76,
							TokenNameDIVIDE_EQUAL = 77,
							TokenNameAND_EQUAL = 78,
							TokenNameOR_EQUAL = 79,
							TokenNameXOR_EQUAL = 80,
							TokenNameREMAINDER_EQUAL = 81,
							TokenNameLEFT_SHIFT_EQUAL = 82,
							TokenNameRIGHT_SHIFT_EQUAL = 83,
							TokenNameUNSIGNED_RIGHT_SHIFT_EQUAL = 84,
							TokenNameOR_OR = 32,
							TokenNameAND_AND = 30,
							TokenNamePLUS = 3,
							TokenNameMINUS = 4,
							TokenNameNOT = 69,
							TokenNameREMAINDER = 7,
							TokenNameXOR = 26,
							TokenNameAND = 24,
							TokenNameMULTIPLY = 6,
							TokenNameOR = 28,
							TokenNameTWIDDLE = 70,
							TokenNameDIVIDE = 8,
							TokenNameGREATER = 15,
							TokenNameLESS = 9,
							TokenNameLPAREN = 27,
							TokenNameRPAREN = 33,
							TokenNameLBRACE = 41,
							TokenNameRBRACE = 55,
							TokenNameLBRACKET = 11,
							TokenNameRBRACKET = 105,
							TokenNameSEMICOLON = 34,
							TokenNameQUESTION = 31,
							TokenNameCOLON = 90,
							TokenNameCOMMA = 38,
							TokenNameDOT = 5,
							TokenNameEQUAL = 72,
							TokenNameAT = 39,
							TokenNameELLIPSIS = 123,
							TokenNameARROW = 109,
							TokenNameCOLON_COLON = 10,
							TokenNameCOLON_COLON_COLON = 68,
							TokenNameBeginLambda = 52,
							TokenNameBeginIntersectionCast = 71,
							TokenNameBeginTypeArguments = 104,
							TokenNameElidedSemicolonAndRightBrace = 137,
							TokenNameAT308 = 29,
							TokenNameAT308DOTDOTDOT = 133,
							TokenNameBeginCaseExpr = 138,
							TokenNameRestrictedIdentifierYield = 95,
							TokenNameRestrictedIdentifierrecord = 88,
							TokenNameRestrictedIdentifiersealed = 56,
							TokenNameRestrictedIdentifierpermits = 131,
							TokenNameEOF = 89,
							TokenNameERROR = 141;
}
